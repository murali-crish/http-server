<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="37262287-f79f-4f27-94e3-2aaf4dfe357d" name="Default Changelist" comment="Add GET method">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server_integration_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/server_integration_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/server_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.15.2/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$/../../../.." />
      </list>
    </option>
  </component>
  <component name="ProjectId" id="1l8yCTCR3pNUjTVPQ8duTz9xFq7" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="com.goide.configuration.GoLibrariesConfigurableProvider" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RestClientSettings">
    <option name="REQUEST_HISTORY">
      <list>
        <RestClientRequest>
          <option name="httpMethod" value="GET" />
          <option name="urlBase" value="http://localhost:5000/players/Pepper" />
          <option name="urlPath" value="" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Accept" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="textToSend" value="" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
        <RestClientRequest>
          <option name="httpMethod" value="POST" />
          <option name="urlBase" value="http://localhost:5000/players/Pepper" />
          <option name="urlPath" value="" />
          <option name="headers">
            <list>
              <KeyValuePair>
                <option name="key" value="Content-Type" />
                <option name="value" value="application/json" />
              </KeyValuePair>
            </list>
          </option>
          <option name="haveTextToSend" value="true" />
          <option name="textToSend" value="{}" />
          <option name="filesToSend" value="" />
        </RestClientRequest>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.go test github.com/murali-crish/http-server">
    <configuration name="TestLeague in github.com/murali-crish/http-server" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http-server" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/murali-crish/http-server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestLeague\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestStoreWins in github.com/murali-crish/http-server" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http-server" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/murali-crish/http-server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestStoreWins\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/murali-crish/http-server" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="http-server" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/murali-crish/http-server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="http-server#1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/http-server.http" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="http-server#2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/http-server.http" index="2" runType="Run single request">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test github.com/murali-crish/http-server" />
        <item itemvalue="Go Test.TestLeague in github.com/murali-crish/http-server" />
        <item itemvalue="HTTP Request.http-server#2" />
        <item itemvalue="HTTP Request.http-server#1" />
        <item itemvalue="Go Test.TestStoreWins in github.com/murali-crish/http-server" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add GET method" />
    <option name="LAST_COMMIT_MESSAGE" value="Add GET method" />
  </component>
</project>